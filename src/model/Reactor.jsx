/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.11 reactor.glb 
*/

import React, { useEffect, useRef, useState } from 'react'
import { useGLTF, useScroll } from '@react-three/drei'
import { useFrame } from '@react-three/fiber'

export default function Model(props) {


  const [scrollPosition, setScrollPosition] = useState(0);
  const handleScroll = () => {
    const position = window.scrollY;
    setScrollPosition(position);
  };

  useEffect(() => {
    window.addEventListener('scroll', handleScroll, { passive: true });

    return () => {
      window.removeEventListener('scroll', handleScroll);
    };
  }, []);


  const ref = useRef()
  const ref1 = useRef()
  const ref2 = useRef()
  const { nodes, materials } = useGLTF('/reactor.glb')

  useFrame((state, delta) => {
    ref.current.rotation.x += delta * 3
    ref.current.rotation.z += delta * 3

    ref1.current.rotation.x += delta * 3
    ref1.current.rotation.z += delta * 3


    ref2.current.rotation.x += delta * 3
    ref2.current.rotation.z += delta * 3
  })
  return (
    <group {...props} dispose={null}>
      <mesh ref={ref} geometry={nodes.Icosphere002.geometry}  >
        <meshPhongMaterial shininess={100} specular='red' reflectivity={0.5} color='#333333' />
      </mesh>
      <mesh ref={ref1} geometry={nodes.Icosphere003.geometry} >
        <meshPhongMaterial shininess={100} specular='red' reflectivity={0.5} color='#333333' />

      </mesh>
      <mesh ref={ref2} geometry={nodes.Icosphere004.geometry} >
        <meshPhongMaterial shininess={100} specular='red' reflectivity={0.5} color='#333333' />

      </mesh>
    </group>
  )
}

useGLTF.preload('/reactor.glb')
